{
  "title": "Heap and Stack in Javascript Memory Management",
  "date": "2024-11-24T00:00:00.000Z",
  "description": "Like all other programs, Javascript programs use a stack and a heap to manage memory. But how does that influence how we write code?",
  "body": {
    "raw": "\n## Memory Management\n\nWhen we code in Javascript, we don't have to think too much about memory. That's one of Javascripts main advantages -- memory management can be laborious and error-prone, so leaving that work to the engine means we can focus on application logic. However, the engine isn't perfect, and it's possible to write code that impedes the engine's work. So it's helpful to understand some practical details about how memory management happens.\n\n### Heap and Stack\n\nAs with all other programs, memory in Javascript programs is managed in two areas: the **stack** and the **heap**. In Javascript's case, the **stack** manages the execution context of the running code, as well as primitive values and object references. The **heap** stores basically everything else, so: all non-primitives such as objects, arrays, and functions. (Note that in practice, both arrays and functions are actually objects too.) Here are some examples of values stored on the **stack** and **heap** respectively:\n\n```javascript\n// Stack storage\nlet number = 42; // Primitive stored directly\nlet str = \"hello\"; // Primitive stored directly\nlet obj = { name: \"John\" }; // Reference stored (object in heap)\n\n// Heap allocations\nlet array = new Array(1000); // Large array in heap\nlet obj = {\n  // Object in heap\n  data: new ArrayBuffer(1000), // Large buffer in heap\n};\n```\n\nMostly we can ignore this as an implementation detail. But there are a couple of cases where you might want to take note of distinction. One is **memory leaks**. Stack-allocated data is automatically freed when it goes out of scope, but heap-allocated data is not. So it's fairly common to create memory leaks by neglecting to free references to heap-allocated objects.\n\n```javascript\nfunction doMath() {\n  let x = 1;\n  let y = 2;\n  return x + y;\n}\n\n// Potential memory leak - heap allocated objects not being cleaned up\nfunction addHandler() {\n  const bigData = {\n    /* lots of data */\n  };\n  element.addEventListener(\"click\", () => {\n    console.log(bigData); // bigData can't be garbage collected\n    // while this handler exists\n  });\n}\n```\n\nThe second is **caching**. If you're having to frequently access heap-allocated data, you can limit your overhead by caching it on the stack.\n\n```javascript\n// Less efficient - repeated heap access\nfunction sum(obj) {\n  let sum = 0;\n  for (let i = 0; i < 1000; i++) {\n    sum += obj.value; // accessing heap each time\n  }\n  return sum;\n}\n\n// More efficient - single heap access\nfunction sum(obj) {\n  let sum = 0;\n  const value = obj.value; // cache heap value in stack\n  for (let i = 0; i < 1000; i++) {\n    sum += value;\n  }\n  return sum;\n}\n```\n",
    "code": "var Component=(()=>{var ur=Object.create;var U=Object.defineProperty;var lr=Object.getOwnPropertyDescriptor;var fr=Object.getOwnPropertyNames;var cr=Object.getPrototypeOf,dr=Object.prototype.hasOwnProperty;var J=(f,t)=>()=>(t||f((t={exports:{}}).exports,t),t.exports),mr=(f,t)=>{for(var v in t)U(f,v,{get:t[v],enumerable:!0})},we=(f,t,v,y)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let g of fr(t))!dr.call(f,g)&&g!==v&&U(f,g,{get:()=>t[g],enumerable:!(y=lr(t,g))||y.enumerable});return f};var pr=(f,t,v)=>(v=f!=null?ur(cr(f)):{},we(t||!f||!f.__esModule?U(v,\"default\",{value:f,enumerable:!0}):v,f)),br=f=>we(U({},\"__esModule\",{value:!0}),f);var xe=J((wr,Ee)=>{Ee.exports=React});var Re=J(q=>{\"use strict\";(function(){\"use strict\";var f=xe(),t=Symbol.for(\"react.element\"),v=Symbol.for(\"react.portal\"),y=Symbol.for(\"react.fragment\"),g=Symbol.for(\"react.strict_mode\"),G=Symbol.for(\"react.profiler\"),z=Symbol.for(\"react.provider\"),X=Symbol.for(\"react.context\"),j=Symbol.for(\"react.forward_ref\"),F=Symbol.for(\"react.suspense\"),A=Symbol.for(\"react.suspense_list\"),C=Symbol.for(\"react.memo\"),I=Symbol.for(\"react.lazy\"),Ce=Symbol.for(\"react.offscreen\"),K=Symbol.iterator,Oe=\"@@iterator\";function Se(e){if(e===null||typeof e!=\"object\")return null;var r=K&&e[K]||e[Oe];return typeof r==\"function\"?r:null}var E=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function m(e){{for(var r=arguments.length,n=new Array(r>1?r-1:0),a=1;a<r;a++)n[a-1]=arguments[a];Pe(\"error\",e,n)}}function Pe(e,r,n){{var a=E.ReactDebugCurrentFrame,s=a.getStackAddendum();s!==\"\"&&(r+=\"%s\",n=n.concat([s]));var u=n.map(function(o){return String(o)});u.unshift(\"Warning: \"+r),Function.prototype.apply.call(console[e],console,u)}}var ke=!1,De=!1,Ue=!1,Fe=!1,Ae=!1,Z;Z=Symbol.for(\"react.module.reference\");function Ie(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===y||e===G||Ae||e===g||e===F||e===A||Fe||e===Ce||ke||De||Ue||typeof e==\"object\"&&e!==null&&(e.$$typeof===I||e.$$typeof===C||e.$$typeof===z||e.$$typeof===X||e.$$typeof===j||e.$$typeof===Z||e.getModuleId!==void 0))}function Me(e,r,n){var a=e.displayName;if(a)return a;var s=r.displayName||r.name||\"\";return s!==\"\"?n+\"(\"+s+\")\":n}function Q(e){return e.displayName||\"Context\"}function h(e){if(e==null)return null;if(typeof e.tag==\"number\"&&m(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case y:return\"Fragment\";case v:return\"Portal\";case G:return\"Profiler\";case g:return\"StrictMode\";case F:return\"Suspense\";case A:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case X:var r=e;return Q(r)+\".Consumer\";case z:var n=e;return Q(n._context)+\".Provider\";case j:return Me(e,e.render,\"ForwardRef\");case C:var a=e.displayName||null;return a!==null?a:h(e.type)||\"Memo\";case I:{var s=e,u=s._payload,o=s._init;try{return h(o(u))}catch{return null}}}return null}var w=Object.assign,N=0,ee,re,ne,ae,te,ie,oe;function se(){}se.__reactDisabledLog=!0;function We(){{if(N===0){ee=console.log,re=console.info,ne=console.warn,ae=console.error,te=console.group,ie=console.groupCollapsed,oe=console.groupEnd;var e={configurable:!0,enumerable:!0,value:se,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}N++}}function Ye(){{if(N--,N===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:w({},e,{value:ee}),info:w({},e,{value:re}),warn:w({},e,{value:ne}),error:w({},e,{value:ae}),group:w({},e,{value:te}),groupCollapsed:w({},e,{value:ie}),groupEnd:w({},e,{value:oe})})}N<0&&m(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var M=E.ReactCurrentDispatcher,W;function O(e,r,n){{if(W===void 0)try{throw Error()}catch(s){var a=s.stack.trim().match(/\\n( *(at )?)/);W=a&&a[1]||\"\"}return`\n`+W+e}}var Y=!1,S;{var $e=typeof WeakMap==\"function\"?WeakMap:Map;S=new $e}function ue(e,r){if(!e||Y)return\"\";{var n=S.get(e);if(n!==void 0)return n}var a;Y=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var u;u=M.current,M.current=null,We();try{if(r){var o=function(){throw Error()};if(Object.defineProperty(o.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(o,[])}catch(_){a=_}Reflect.construct(e,[],o)}else{try{o.call()}catch(_){a=_}e.call(o.prototype)}}else{try{throw Error()}catch(_){a=_}e()}}catch(_){if(_&&a&&typeof _.stack==\"string\"){for(var i=_.stack.split(`\n`),p=a.stack.split(`\n`),c=i.length-1,d=p.length-1;c>=1&&d>=0&&i[c]!==p[d];)d--;for(;c>=1&&d>=0;c--,d--)if(i[c]!==p[d]){if(c!==1||d!==1)do if(c--,d--,d<0||i[c]!==p[d]){var b=`\n`+i[c].replace(\" at new \",\" at \");return e.displayName&&b.includes(\"<anonymous>\")&&(b=b.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&S.set(e,b),b}while(c>=1&&d>=0);break}}}finally{Y=!1,M.current=u,Ye(),Error.prepareStackTrace=s}var R=e?e.displayName||e.name:\"\",ye=R?O(R):\"\";return typeof e==\"function\"&&S.set(e,ye),ye}function Le(e,r,n){return ue(e,!1)}function Ve(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function P(e,r,n){if(e==null)return\"\";if(typeof e==\"function\")return ue(e,Ve(e));if(typeof e==\"string\")return O(e);switch(e){case F:return O(\"Suspense\");case A:return O(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case j:return Le(e.render);case C:return P(e.type,r,n);case I:{var a=e,s=a._payload,u=a._init;try{return P(u(s),r,n)}catch{}}}return\"\"}var k=Object.prototype.hasOwnProperty,le={},fe=E.ReactDebugCurrentFrame;function D(e){if(e){var r=e._owner,n=P(e.type,e._source,r?r.type:null);fe.setExtraStackFrame(n)}else fe.setExtraStackFrame(null)}function Be(e,r,n,a,s){{var u=Function.call.bind(k);for(var o in e)if(u(e,o)){var i=void 0;try{if(typeof e[o]!=\"function\"){var p=Error((a||\"React class\")+\": \"+n+\" type `\"+o+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[o]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw p.name=\"Invariant Violation\",p}i=e[o](r,o,a,n,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(c){i=c}i&&!(i instanceof Error)&&(D(s),m(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",a||\"React class\",n,o,typeof i),D(null)),i instanceof Error&&!(i.message in le)&&(le[i.message]=!0,D(s),m(\"Failed %s type: %s\",n,i.message),D(null))}}}var He=Array.isArray;function $(e){return He(e)}function Je(e){{var r=typeof Symbol==\"function\"&&Symbol.toStringTag,n=r&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return n}}function qe(e){try{return ce(e),!1}catch{return!0}}function ce(e){return\"\"+e}function de(e){if(qe(e))return m(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Je(e)),ce(e)}var T=E.ReactCurrentOwner,Ge={key:!0,ref:!0,__self:!0,__source:!0},me,pe,L;L={};function ze(e){if(k.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning)return!1}return e.ref!==void 0}function Xe(e){if(k.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning)return!1}return e.key!==void 0}function Ke(e,r){if(typeof e.ref==\"string\"&&T.current&&r&&T.current.stateNode!==r){var n=h(T.current.type);L[n]||(m('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',h(T.current.type),e.ref),L[n]=!0)}}function Ze(e,r){{var n=function(){me||(me=!0,m(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};n.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:n,configurable:!0})}}function Qe(e,r){{var n=function(){pe||(pe=!0,m(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};n.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:n,configurable:!0})}}var er=function(e,r,n,a,s,u,o){var i={$$typeof:t,type:e,key:r,ref:n,props:o,_owner:u};return i._store={},Object.defineProperty(i._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(i,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:a}),Object.defineProperty(i,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:s}),Object.freeze&&(Object.freeze(i.props),Object.freeze(i)),i};function rr(e,r,n,a,s){{var u,o={},i=null,p=null;n!==void 0&&(de(n),i=\"\"+n),Xe(r)&&(de(r.key),i=\"\"+r.key),ze(r)&&(p=r.ref,Ke(r,s));for(u in r)k.call(r,u)&&!Ge.hasOwnProperty(u)&&(o[u]=r[u]);if(e&&e.defaultProps){var c=e.defaultProps;for(u in c)o[u]===void 0&&(o[u]=c[u])}if(i||p){var d=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;i&&Ze(o,d),p&&Qe(o,d)}return er(e,i,p,s,a,T.current,o)}}var V=E.ReactCurrentOwner,be=E.ReactDebugCurrentFrame;function x(e){if(e){var r=e._owner,n=P(e.type,e._source,r?r.type:null);be.setExtraStackFrame(n)}else be.setExtraStackFrame(null)}var B;B=!1;function H(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===t}function ve(){{if(V.current){var e=h(V.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function nr(e){{if(e!==void 0){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),n=e.lineNumber;return`\n\nCheck your code at `+r+\":\"+n+\".\"}return\"\"}}var he={};function ar(e){{var r=ve();if(!r){var n=typeof e==\"string\"?e:e.displayName||e.name;n&&(r=`\n\nCheck the top-level render call using <`+n+\">.\")}return r}}function _e(e,r){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var n=ar(r);if(he[n])return;he[n]=!0;var a=\"\";e&&e._owner&&e._owner!==V.current&&(a=\" It was passed a child from \"+h(e._owner.type)+\".\"),x(e),m('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',n,a),x(null)}}function ge(e,r){{if(typeof e!=\"object\")return;if($(e))for(var n=0;n<e.length;n++){var a=e[n];H(a)&&_e(a,r)}else if(H(e))e._store&&(e._store.validated=!0);else if(e){var s=Se(e);if(typeof s==\"function\"&&s!==e.entries)for(var u=s.call(e),o;!(o=u.next()).done;)H(o.value)&&_e(o.value,r)}}}function tr(e){{var r=e.type;if(r==null||typeof r==\"string\")return;var n;if(typeof r==\"function\")n=r.propTypes;else if(typeof r==\"object\"&&(r.$$typeof===j||r.$$typeof===C))n=r.propTypes;else return;if(n){var a=h(r);Be(n,e.props,\"prop\",a,e)}else if(r.PropTypes!==void 0&&!B){B=!0;var s=h(r);m(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",s||\"Unknown\")}typeof r.getDefaultProps==\"function\"&&!r.getDefaultProps.isReactClassApproved&&m(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function ir(e){{for(var r=Object.keys(e.props),n=0;n<r.length;n++){var a=r[n];if(a!==\"children\"&&a!==\"key\"){x(e),m(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",a),x(null);break}}e.ref!==null&&(x(e),m(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),x(null))}}function or(e,r,n,a,s,u){{var o=Ie(e);if(!o){var i=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(i+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var p=nr(s);p?i+=p:i+=ve();var c;e===null?c=\"null\":$(e)?c=\"array\":e!==void 0&&e.$$typeof===t?(c=\"<\"+(h(e.type)||\"Unknown\")+\" />\",i=\" Did you accidentally export a JSX literal instead of a component?\"):c=typeof e,m(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",c,i)}var d=rr(e,r,n,s,u);if(d==null)return d;if(o){var b=r.children;if(b!==void 0)if(a)if($(b)){for(var R=0;R<b.length;R++)ge(b[R],e);Object.freeze&&Object.freeze(b)}else m(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ge(b,e)}return e===y?ir(d):tr(d),d}}var sr=or;q.Fragment=y,q.jsxDEV=sr})()});var Te=J((xr,Ne)=>{\"use strict\";Ne.exports=Re()});var gr={};mr(gr,{default:()=>_r,frontmatter:()=>vr});var l=pr(Te()),vr={title:\"Heap and Stack in Javascript Memory Management\",date:\"2024-11-24\",description:\"Like all other programs, Javascript programs use a stack and a heap to manage memory. But how does that influence how we write code?\"};function je(f){let t=Object.assign({h2:\"h2\",p:\"p\",h3:\"h3\",strong:\"strong\",pre:\"pre\",code:\"code\"},f.components);return(0,l.jsxDEV)(l.Fragment,{children:[(0,l.jsxDEV)(t.h2,{children:\"Memory Management\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:7,columnNumber:1},this),`\n`,(0,l.jsxDEV)(t.p,{children:\"When we code in Javascript, we don't have to think too much about memory. That's one of Javascripts main advantages -- memory management can be laborious and error-prone, so leaving that work to the engine means we can focus on application logic. However, the engine isn't perfect, and it's possible to write code that impedes the engine's work. So it's helpful to understand some practical details about how memory management happens.\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:9,columnNumber:1},this),`\n`,(0,l.jsxDEV)(t.h3,{children:\"Heap and Stack\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:11,columnNumber:1},this),`\n`,(0,l.jsxDEV)(t.p,{children:[\"As with all other programs, memory in Javascript programs is managed in two areas: the \",(0,l.jsxDEV)(t.strong,{children:\"stack\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:13,columnNumber:88},this),\" and the \",(0,l.jsxDEV)(t.strong,{children:\"heap\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:13,columnNumber:106},this),\". In Javascript's case, the \",(0,l.jsxDEV)(t.strong,{children:\"stack\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:13,columnNumber:142},this),\" manages the execution context of the running code, as well as primitive values and object references. The \",(0,l.jsxDEV)(t.strong,{children:\"heap\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:13,columnNumber:258},this),\" stores basically everything else, so: all non-primitives such as objects, arrays, and functions. (Note that in practice, both arrays and functions are actually objects too.) Here are some examples of values stored on the \",(0,l.jsxDEV)(t.strong,{children:\"stack\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:13,columnNumber:488},this),\" and \",(0,l.jsxDEV)(t.strong,{children:\"heap\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:13,columnNumber:502},this),\" respectively:\"]},void 0,!0,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,l.jsxDEV)(t.pre,{children:(0,l.jsxDEV)(t.code,{className:\"language-javascript\",children:`// Stack storage\nlet number = 42; // Primitive stored directly\nlet str = \"hello\"; // Primitive stored directly\nlet obj = { name: \"John\" }; // Reference stored (object in heap)\n\n// Heap allocations\nlet array = new Array(1000); // Large array in heap\nlet obj = {\n  // Object in heap\n  data: new ArrayBuffer(1000), // Large buffer in heap\n};\n`},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:15,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,l.jsxDEV)(t.p,{children:[\"Mostly we can ignore this as an implementation detail. But there are a couple of cases where you might want to take note of distinction. One is \",(0,l.jsxDEV)(t.strong,{children:\"memory leaks\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:29,columnNumber:145},this),\". Stack-allocated data is automatically freed when it goes out of scope, but heap-allocated data is not. So it's fairly common to create memory leaks by neglecting to free references to heap-allocated objects.\"]},void 0,!0,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,l.jsxDEV)(t.pre,{children:(0,l.jsxDEV)(t.code,{className:\"language-javascript\",children:`function doMath() {\n  let x = 1;\n  let y = 2;\n  return x + y;\n}\n\n// Potential memory leak - heap allocated objects not being cleaned up\nfunction addHandler() {\n  const bigData = {\n    /* lots of data */\n  };\n  element.addEventListener(\"click\", () => {\n    console.log(bigData); // bigData can't be garbage collected\n    // while this handler exists\n  });\n}\n`},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:31,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:31,columnNumber:1},this),`\n`,(0,l.jsxDEV)(t.p,{children:[\"The second is \",(0,l.jsxDEV)(t.strong,{children:\"caching\"},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:50,columnNumber:15},this),\". If you're having to frequently access heap-allocated data, you can limit your overhead by caching it on the stack.\"]},void 0,!0,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:50,columnNumber:1},this),`\n`,(0,l.jsxDEV)(t.pre,{children:(0,l.jsxDEV)(t.code,{className:\"language-javascript\",children:`// Less efficient - repeated heap access\nfunction sum(obj) {\n  let sum = 0;\n  for (let i = 0; i < 1000; i++) {\n    sum += obj.value; // accessing heap each time\n  }\n  return sum;\n}\n\n// More efficient - single heap access\nfunction sum(obj) {\n  let sum = 0;\n  const value = obj.value; // cache heap value in stack\n  for (let i = 0; i < 1000; i++) {\n    sum += value;\n  }\n  return sum;\n}\n`},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:52,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:52,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\",lineNumber:1,columnNumber:1},this)}function hr(f={}){let{wrapper:t}=f.components||{};return t?(0,l.jsxDEV)(t,Object.assign({},f,{children:(0,l.jsxDEV)(je,f,void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\"},this)}),void 0,!1,{fileName:\"/Users/paulnewsam/dev/paultnewsam.com/posts/_mdx_bundler_entry_point-30d8f01e-eca6-4ef4-8fb2-6fdeb6aa3543.mdx\"},this):je(f)}var _r=hr;return br(gr);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "heap-and-stack-in-javascript-memory-management.md",
  "_raw": {
    "sourceFilePath": "heap-and-stack-in-javascript-memory-management.md",
    "sourceFileName": "heap-and-stack-in-javascript-memory-management.md",
    "sourceFileDir": ".",
    "contentType": "markdown",
    "flattenedPath": "heap-and-stack-in-javascript-memory-management"
  },
  "type": "Post",
  "slug": "/blog/heap-and-stack-in-javascript-memory-management"
}